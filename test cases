//We need to check auth/noauth mode in some scenarios.

https://www.imdb.com/chart/top?ref_=nv_mv_250_6

1. The page opens without any mistakes: *
- check get request / 200 OK response
2. UI: Check all main elements on page *
-- headers
-- texts
-- sorting block
-- all columns elements in chart
-- the number of films on the page is really 250
3. The page scroll works *
4. Check data consistency (the order of the elements) *
5. Check all types of sorting *?
-- API test - check that the parameterized URLs return sorted data 
-- UI test - check that when you choose the appropriate sorting, the correct parameter is substituted in the URL
5.1 IMBD rating = default (Ranking) + desc/acs is working (up/down arrows)
5.2 Release Date + desc/acs is working (up/down arrows)
5.3 Number of Ratings + desc/acs is working (up/down arrows)
5.4 here we need a some preconditions for checking 'your earing' - auth mode --> and this rate is the same witj defaul if user doesn’t have personal rate list 
   & this is noauth mode + desc/acs is working (up/down arrows)
6. Check 'click to add to watchlist' btn 
- UI: when you hover over the btn, a tooltip is shown
- functionality: auth/noauth
7. Check 'your rating' btn 
- UI: when you hover over the btn, focus is on the btn
- functionality: auth/noauth
8. Check 'share' btn - checking the correct navigations will be enough *
8.1 copy url - past url - check that you open the same work page
8.2 fb sharing - fb auth page is open
8.3 gmail sharing - default mail interface is open
9. Сheck navigation - open the moviecard 
UI: when you hover over the moviecard title, a tooltip with the director's name & main actor's names is shown
- functionality: click the moviecard - the movie card is open without any unexpected error
10. Сheck the page load on slow bandwidth (without unexpected errors/cruches, with correct elements buffering) *


*?
Speaking about i.5

When I worked at Okko we redesign web app, so we have a long story with sorting mistakes - we need to control this from both - frontend should buld a right 
request * server sould answer correctly. And I'm guessing that if you have a non consistent data on different type of sorting it is not a blocker situation,
the main point in such situations is that your page id not broken & the default sort is correct.



